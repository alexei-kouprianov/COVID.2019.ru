(0) В этой записи довольно детально описывается текущая система скриптов проекта https://github.com/alexei-kouprianov/COVID.2019.ru

(0.1) Запуск скриптов должен осуществляться 

(0.1.1) ежедневно, желательно вскоре после публикации обновлений на сайте "стопкоронавирус.рф" (надо однако подождать минут пять), но, во всяком случае, до следующего обновления.

(0.1.2) в следующей последовательности:

(0.1.2.1) Из консоли / командной строки, из папки scripts:

perl stopcoronavirus.extractor.20200429.pl
Rscript covid.2019.converter.r
perl covid.2019.disaggregator.pl

(0.1.2.1) После запуска R из папки scripts (или установления папки scripts в качестве рабочего каталога), в консоли R:

source("covid.2019.ru.libraries.r")
source("covid.2019.ru.main.20201104.r")
source("covid.2019.ru.plots.20201104.r")

Возможно, скрипт 'covid.2019.ru.main.20201104.r' имеет смысл запускать при помощи copy and paste из редактора кода.

(0.2) Ниже приведено более подробное описание работы скриптов.

################################

(1) Perl скрипт 'stopcoronavirus.extractor.20200429.pl'

(1.1) Обращается к 'https://стопкоронавирус.рф/information/'

(1.2) Печатает результат (с полной заменой содержимого файла) в 'stopcoronavirus.rf.20200429.txt' (по историческим причинам находится в папке 'scripts').

(1.3) Читает получившийся файл stopcoronavirus.rf.20200429.txt в построчном режиме, ищет в нем и печатает

(1.3.1) Дату и время публикации набора данных (с полной заменой содержимого файла) -- в файл

'../downloads/stopcoronavirus.timestamp.moment.20200429.txt'

(1.3.2) Сам набор данных -- строку JSON -- (с полной заменой содержимого файла) -- в файл

'../downloads/stopcoronavirus.storage.moment.20200429.json'

(1.3.3) Сборную строку, состоящую из даты, времени, а также строки JSON (то же, что и в 3.1 -- 3.2, но теперь -- вместе) печатает в конец файла

'../downloads/stopcoronavirus.storage.cumulative.20200429.txt'

(1.3.4) Файл '../downloads/stopcoronavirus.storage.cumulative.20200429.txt' упаковывает в архив '../downloads/stopcoronavirus.storage.cumulative.20200429.txt.gz'

Итого, в результате его работы обновляется пять файлов:

'stopcoronavirus.rf.20200429.txt' (копия веб-страницы)
'../downloads/stopcoronavirus.timestamp.moment.20200429.txt' (извлеченный из веб-страницы timestamp)
'../downloads/stopcoronavirus.storage.moment.20200429.json' (извлеченная из веб-страницы JSON строка с данными по регионам)
'../downloads/stopcoronavirus.storage.cumulative.20200429.txt' (архив timestamps и JSON-файлов с момента начала работы проекта)
'../downloads/stopcoronavirus.storage.cumulative.20200429.txt.gz' (пакованный архив timestamps и JSON-файлов с момента начала работы проекта)

################################

(2) R Скрипт 'covid.2019.converter.r'

(2.1) Читает два ежедневно изменяющихся файла:

"../downloads/stopcoronavirus.storage.moment.20200429.json"
"../downloads/stopcoronavirus.timestamp.moment.20200429.txt"

(2.2) Файл со списком регионов в нужном порядке и формате:

"../misc/loci.txt"

(2.3) Файл с таблицей данных по динамике эпидемии за весь период:

"../data/momentary.txt"

(2.4) Перегруппировывает данные и печатает после пергруппировки три файла:

"../data/momentary.txt" (обновленная таблица данных по динамике эпидемии за весь период)
"../downloads/increment.txt" (обновленный файл с приростами за текущий день)
"../downloads/increment.0.txt" (обновленный файл с приростами за текущий день в несколько ином формате)

################################

(3) Perl Скрипт 'covid.2019.disaggregator.pl'

(3.1) Проверяет наличие файла '../data/momentary.da.txt' и стирает его при наличии.

(3.2) Читает файл '../data/momentary.txt' в построчном режиме.

(3.3) Печатает копии строк файла '../data/momentary.txt' в 

'../data/momentary.da.txt'

таким образом, чтобы количество копий строк со статусами заболевших, умерших и выздоровевших за данный день соответствовало кличеству заболевших, умерших и выздоровевших. Например, если в регионе X указано Y новых случаев, то строка региона X с пометкой detected будет повторена Y раз.

(3.4) Пакует файл '../data/momentary.da.txt' в архив '../data/momentary.da.txt.gz') or die $!;

################################

(4) R Скрипт 'covid.2019.ru.libraries.r' загружает необходимые дополнительные библиотеки (maps, TeachingDemos, rgdal, rmarkdown, rjson) и устанавливает нужное значение переменной для англоязычных графиков с осью времени (Sys.setlocale("LC_TIME", "en_US.UTF-8")).

################################

(5) R скрипт 'covid.2019.ru.main.20201104.r'

(5.1) нуждается в файлах:

(5.1.1) При запуске "с нуля" также:

'../data/primary_dataset_backup.json'

(5.1.2) При последующих ежедневных запусках:

"../misc/population.txt" (данные о регионах)
"../downloads/increment.txt" (данные о приросте за текущий день)
"../Rmd/daily.report.Rmd" (шаблон для печати HTML-отчета)

(5.2) При каждом запуске создает 

(5.2.1) ряд объектов R для использования в скрипте 'covid.2019.ru.plots.20201104.r'

(5.2.2) Файлы

"../data/primary_dataset_backup.json" (копия ключевого объекта класса list с раскладкой приростов по регионам)
"../Rmd/daily.report.html" (HTML-отчет для копирования в FB, при копировании ломается таблица, но ее легко восстановить вручную)
".RData" (скрытый файл, содержащий R workspace Image, который автоматически загрузит все наработанные объекты и историю [но не библиотеки!] при следующем запуске сессии R из каталога 'scripts')

################################

(6) R скрипт 'covid.2019.ru.plots.20201104.r' нуждается в библиотеках (загружаемых при помощи ''covid.2019.ru.libraries.r'') и объектах, созданных при помощи 'covid.2019.ru.main.20201104.r'.

(6.1) Нуждается также в каталоге

"../misc/ESRI.shapefile" (ESRI spapefile для отрисовки карт)

(6.2) печатает все обзорные графики, раскладывая их по папкам (при необходимости -- создавая отсутствующие папки).
